{"title":"Linux基础","uid":"144f0b4d9b9f80ea377106e9c6a54a45","slug":"Linux基础","date":"2018-07-20T09:49:56.000Z","updated":"2021-07-01T06:36:13.606Z","comments":true,"path":"api/articles/Linux基础.json","keywords":null,"cover":"../img/Linux基础/cover.jpeg","content":"<h4 id=\"一-基础指令\"><a href=\"#一-基础指令\" class=\"headerlink\" title=\"一.基础指令\"></a>一.基础指令</h4><p>​  file+文件名：查看文件类型 ；</p>\n<p>​  cat+文件名：查看文件；</p>\n<p>​  less + 文件名：分页查看文件；</p>\n<p>​  echo+内容：打印想要输出的内容;</p>\n<p>​  echo+内容&gt;文件名：打印内容至指定的文件里;</p>\n<p>​  ls +命令（错误的） <strong>2&gt;</strong> 文件名： 重定向标准错误输出，即把指令输入错误的报错信息重定向保存至2&gt;后的文</p>\n<p>​  件中；重定向标准输出则为&lt;号；</p>\n<p>​ <img src=\"../img/Linux%E5%9F%BA%E7%A1%80/1.png\" alt=\"image\"> </p>\n<p>​  强制删除文件夹包括文件夹下的文件 ：rm -rf 文件夹名。</p>\n<p>​  查看防火墙状态：firewall-cmd –state；</p>\n<p>​  停止firewall： systemctl stop firewalld.service；</p>\n<p>​  禁止防火墙开机启动：systemctl disable firewalld.service；</p>\n<h4 id=\"二-权限设置\"><a href=\"#二-权限设置\" class=\"headerlink\" title=\"二.权限设置\"></a>二.权限设置</h4><p>1.文件权限</p>\n<p><img src=\"../img/Linux%E5%9F%BA%E7%A1%80/2.png\" alt=\"image\"></p>\n<p>​  r指读权限，W指有写权限，-指无权限，x为执行权限。 <strong>ls -l +文件名</strong>:查看文件的权限情况。</p>\n<p>​ 2.添加权限（有权限代表1，无权限为0，共9位数，如上图，每3位代表R W X 读，写，执行权限，）</p>\n<p>​  例1： <strong>chmod +w</strong> 文件名；为当前操作目录的用户添加当前工作目录的写权限；</p>\n<p>​  <strong>chmod +r</strong> 文件名 ；添加读权限；</p>\n<p>​  <strong>chmod +x</strong> 文件名； 添加执行权限。</p>\n<p>​  例2： -rw-rw-r– 转化位二进制即 <strong>110</strong>  <strong>110</strong>  <strong>100</strong> 即要授予owner执行权限则需输入如下指令 (111 110 100) 111 二进制转化为十进制为 7 ，110转化为6 ，100转化为4。则指令应为</p>\n<p>chmod 764 +文件名或目录名。</p>\n<h4 id=\"三-进程\"><a href=\"#三-进程\" class=\"headerlink\" title=\"三.进程\"></a>三.进程</h4><p>​  1.查看当前所有进程，并分页式输出(利用了管道)；</p>\n<p>​  例： <strong>ps aux|less</strong></p>\n<p>​  2.查看附带模糊进程名；</p>\n<p>​  例： <strong>ps aux|grep vim</strong> 查询包含字符串vim的进程</p>\n<p>​  3.<strong>kill+进程ID</strong>结束指定的进程；</p>\n<p><img src=\"../img/Linux%E5%9F%BA%E7%A1%80/3.png\" alt=\"image\"></p>\n<p>​  <strong>kill -数字编号 进程ID</strong> 实现终止指定进程；</p>\n<p>​  例：kill -9 15 ，以编号9的方式终止15号进程。</p>\n<h4 id=\"四-查找\"><a href=\"#四-查找\" class=\"headerlink\" title=\"四.查找\"></a>四.查找</h4><p>​  1.find 查出当前目录的所有文件；</p>\n<p>​  2.<strong>find+ |grep .txt</strong> 利用管道实现指定查找（筛选查找）；</p>\n<p>1)只想查看文件：<strong>find -type f</strong></p>\n<p>​  2)只想查看目录：<strong>find -type d</strong></p>\n<p>​  3)按类型查看的同时执行新的指令：<strong>find -type f -exec ls -l ‘{}’ ‘;’</strong></p>\n<p>​  其中**-exec** 后为查找文件成功后想要执行的指令(本次查询完执行的指令为 <strong>ls -l</strong> ), **’;’**为-exec的结</p>\n<p>​  束符, **’{}’**代表查询到的文件。</p>\n<h4 id=\"五-可执行文件\"><a href=\"#五-可执行文件\" class=\"headerlink\" title=\"五.可执行文件\"></a>五.可执行文件</h4><p>​  1.<strong>ln -s a.sh test</strong> ：给可执行文件a.sh的别名为test;</p>\n<p>​  2. <strong>./ a.sh</strong> ：执行a.sh这个可执行文件；</p>\n<h4 id=\"六-配置JDK与下载各种软件\"><a href=\"#六-配置JDK与下载各种软件\" class=\"headerlink\" title=\"六.配置JDK与下载各种软件\"></a>六.配置JDK与下载各种软件</h4><p>​  1.<strong>yum install update</strong> ：更新系统中的package;</p>\n<p>​  2.<strong>curl + 网址</strong> ：链接到网址(即打开对应的网站)；</p>\n<p>​  3.<strong>yum install +软件名</strong>：下载对应的应用软件;</p>\n<p>​  例： <strong>yum install wget</strong> 下载wget。</p>\n<p>​ 4.<strong>wget + 下载链接</strong> ：下载；</p>\n<p>​  5.编辑文件结束后</p>\n<p>1）不想保存任何修改则输入 <strong>：q!</strong></p>\n<p>​  2）保存修改并退出则输入 <strong>：wq</strong></p>\n<p>​  6.配置JDK环境变量： <strong>vim /etc/profile</strong> (编辑配置文件) 需要输入的内容为（如下图）;</p>\n<p><img src=\"../img/Linux%E5%9F%BA%E7%A1%80/4.png\" alt=\"image\"></p>\n<p>​  7.使配置文件生效: <strong>source /etc/profile</strong>;</p>\n<p>​  8.解压文件：<strong>tar -zxvf 压缩包名</strong> 。</p>\n<p>​  9.进入到要安装得文件后执行编译安装指令: <strong>./configure –prefix=/usr/local</strong> （其中–prefix=后为指定安装路径）,编译完后执行安装指令 <strong>make &amp;&amp; make install</strong> 。</p>\n<h4 id=\"七-脚本\"><a href=\"#七-脚本\" class=\"headerlink\" title=\"七.脚本\"></a>七.脚本</h4><p>​  可执行文件.sh中编写</p>\n<p>​  cd $1 \\\\链接到第一个文件</p>\n<p>​  echo I am in ‘pwq’  \\\\打印 I am in 当前工作目录路径 (其中‘ ’为tab键上的\\的一个按键，它会提取pwd指令的返回结果）</p>\n<p>​  for file in ‘ls’  \\对要操作的文件夹的文件全部替换名字，例a 执行脚本 后会变a.txt</p>\n<p>​  do</p>\n<p>​ 对应的操作</p>\n<p>​  done  \\结束脚本</p>\n<h4 id=\"八-nginx\"><a href=\"#八-nginx\" class=\"headerlink\" title=\"八.nginx\"></a>八.nginx</h4><ol>\n<li><p> <strong>cd /usr/local/sbin</strong> ：链接到此目录下；</p>\n</li>\n<li><p> <strong>./nginx</strong> ：启动nginx；</p>\n</li>\n<li><p> <strong>./nginx -s reload</strong> ：重启nginx（在没有配置全局变量的时候需要在nginx可执行目录sbin下，再输入此命令）；</p>\n</li>\n<li><p> 验证nginx配置文件是否正确：进入nginx安装目录下的sbin下，输入**./nginx -t** ；</p>\n</li>\n<li><p>停止nginx</p>\n<p> 1)ps -ef | grep nginx ;</p>\n<p> 2)从容停止nginx：kill -QUIT 主进程号；</p>\n<p> 3）快速停止：kill -TERM 主进程号；</p>\n<p> 4）强制停止 ：pkill -9 nginx 。</p>\n</li>\n</ol>\n<h4 id=\"九-Vim\"><a href=\"#九-Vim\" class=\"headerlink\" title=\"九.Vim\"></a>九.Vim</h4><ol>\n<li><p> vim 开启行号：在命令模式下输入set number （即保存输入wq的位置输入set number按回车即可）；</p>\n</li>\n<li><p> vim 关闭行号：set nonumber；<br><img src=\"../img/Linux%E5%9F%BA%E7%A1%80/5.png\" alt=\"image\"></p>\n</li>\n</ol>\n","text":"一.基础指令​ file+文件名：查看文件类型 ； ​ cat+文件名：查看文件； ​ less + 文件名：分页查看文件； ​ echo+内容：打印想要输出的内容; ​ echo+内容&gt;文件名：打印内容至指定的文件里; ​ ls +命令（错误的） 2&gt; 文件名： 重...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">一.基础指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">二.权限设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">三.进程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">四.查找</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%94-%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">五.可执行文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AD-%E9%85%8D%E7%BD%AEJDK%E4%B8%8E%E4%B8%8B%E8%BD%BD%E5%90%84%E7%A7%8D%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">六.配置JDK与下载各种软件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%83-%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">七.脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AB-nginx\"><span class=\"toc-text\">八.nginx</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%9D-Vim\"><span class=\"toc-text\">九.Vim</span></a></li></ol>","author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}},"mapped":true,"prev_post":{"title":"Mybatis","uid":"54e1d69dbe01003cc0c2e45b21bc6b3e","slug":"Mybatis","date":"2018-11-24T07:00:52.000Z","updated":"2021-07-01T07:20:45.933Z","comments":true,"path":"api/articles/Mybatis.json","keywords":null,"cover":"../img/Mybatis/cover.jpeg","text":"一.Mybatis1.Hibernate全表映射，而Mybatis半自动映射且可配置动态SQL 2.Mapper 是一个接口，而没有任何实现类，它的作用是发送SQL，然后返回我们需要的结果，或者执行SQL从而修改数据库的数据。 3.Mybatis别名（typeAliases）不区...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/tags/mybatis.json"}],"author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}}},"next_post":{}}