{"title":"LAMP环境搭建","uid":"95078be12975a222d9293ee317802e05","slug":"LAMP环境搭建","date":"2019-04-06T06:52:46.000Z","updated":"2021-07-01T07:57:51.290Z","comments":true,"path":"api/articles/LAMP环境搭建.json","keywords":null,"cover":"../img/LAMP环境搭建/cover.jpeg","content":"<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>Centos7下LAMP的环境搭建！后续会带来集成LNMP的环境搭建！<br>版本：Apache(httpd-2.4.38)+MySQL-5.7.24+PHP-7.1.26</p>\n<h4 id=\"第一步：配置防火墙\"><a href=\"#第一步：配置防火墙\" class=\"headerlink\" title=\"第一步：配置防火墙\"></a>第一步：配置防火墙</h4><hr>\n<p>1.开放80和3306端口：<br>firewall-cmd –zone=public –add-port=80/tcp –permanent (permanent为永久生效，没有此参数重启就 失效)</p>\n<p>firewall-cmd –zone=public –add-port=80/tcp –permanent</p>\n<p>systemctl restart firewalld.service 重启防火墙</p>\n<p>2.防火墙的一些相关指令：</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.png\" alt=\"image\"></p>\n<h4 id=\"第二步：使用源码安装Apache\"><a href=\"#第二步：使用源码安装Apache\" class=\"headerlink\" title=\"第二步：使用源码安装Apache\"></a>第二步：使用源码安装Apache</h4><hr>\n<h5 id=\"安装Apache之前关联依赖的安装\"><a href=\"#安装Apache之前关联依赖的安装\" class=\"headerlink\" title=\"安装Apache之前关联依赖的安装\"></a>安装Apache之前关联依赖的安装</h5><p>1.下载Apache之前需要安装的两个个关联包，apr、apr-util：</p>\n<p>下载链接如下：<a href=\"https://apr.apache.org/\">https://apr.apache.org/</a></p>\n<p>2.将下载好的apr-1.4.5.tar.gz和apr-util-1.3.12.tar.gz上传到Linux的/usr/local/路径中，并解压：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tar -zxvf apr-1.4.5.tar.gz\ntar -zxvf apr-util-1.3.12.tar.gz</code></pre>\n<p>3.cd到解压出来的apr-1.4.5中，并执行编译和安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#cd到apr中\ncd &#x2F;usr&#x2F;local&#x2F;apr-1.4.5\n#预编译,并制定安装路径为&#x2F;usr&#x2F;local&#x2F;apr，我们需要提前在&#x2F;usr&#x2F;local&#x2F;中使用mkdir apr来创建apr文件夹\n.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apr\n#编译\nmake\n#安装\nmake install</code></pre>\n<p>4.cd到解压出来的apr-util-1.3.12中，并执行编译和安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#cd到apr中\ncd &#x2F;usr&#x2F;local&#x2F;apr-1.4.5\n#预编译,并制定安装路径为&#x2F;usr&#x2F;local&#x2F;apr-util，同上，先创建文件夹apr-util，同时注意后面的--with-apr不可少\n.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apr-util --with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr\n#编译\nmake\n#安装\nmake install</code></pre>\n<p>5.下载pcre-8.37.tar.gz到/usr/local/路径中，下载链接(<a href=\"http://www.pcre.org/\">http://www.pcre.org/</a>):</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#解压\ntar -zxvf pcre-8.37.tar.gz\n#预编译\ncd &#x2F;usr&#x2F;local&#x2F;pcre-8.37\n.&#x2F;configure \n#编译与安装\nmake\nmake install</code></pre>\n<p>5.至此完成了apache编译安装所需依赖的安装：</p>\n<p>若apr和apr-util安装过程中遇到问题，可参考该博客：<a href=\"https://www.jianshu.com/p/a336d3808f52\">https://www.jianshu.com/p/a336d3808f52</a></p>\n<h5 id=\"安装Apache\"><a href=\"#安装Apache\" class=\"headerlink\" title=\"安装Apache\"></a>安装Apache</h5><p>1.下载httpd包：</p>\n<p>httpd-2.4.38.tar.gz，下载链接为：<a href=\"http://httpd.apache.org/download.cgi#apache24\">http://httpd.apache.org/download.cgi#apache24</a></p>\n<p>2.使用xftp将httpd-2.4.38.tar.gz压缩包放到/usr/local/下，并解压，命令如下:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -zxvf httpd-2.4.38.tar.gz</code></pre>\n<p>3.cd到http-2.4.38中，并编译安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;usr&#x2F;local&#x2F;httpd-2.4.38\n#预编译 ，指定安装路径在&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;下，需在&#x2F;usr&#x2F;local&#x2F;下提前mkdir apache2\n.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F; --with-pcre --with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr --with-apr-util&#x3D;&#x2F;usr&#x2F;local&#x2F;apr-util\n\n#编译与安装\nmake\nmake install</code></pre>\n<p>4.修改Apache配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf\n#编辑\nvim httpd.conf\n#搜索ServerName，将注释打开，并修改，如下:\n#ServerName www.example.com:80 修改为 ServerName localhost:80</code></pre>\n<p>4.启动Apache</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#到安装路径下启动Apache\ncd &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin\n#启动\n.&#x2F;apachectl start</code></pre>\n<p>5.打开浏览器，输入虚拟机IP地址访问，若出现It works! 则表明Apache安装成功。</p>\n<h4 id=\"第三步：安装MySQL\"><a href=\"#第三步：安装MySQL\" class=\"headerlink\" title=\"第三步：安装MySQL\"></a>第三步：安装MySQL</h4><hr>\n<p>1.检查是否有Mysql</p>\n<p>Linux中有可能带有mysql数据库，所以我们需要检查一下，再进行安装。首先判断云空间中是否安装了mysql，使用如下命令：<code>rpm -qa | grep mysql</code>如果没有mysql就进行第2步，如果已经有mysql则进行第3步。</p>\n<p>2.安装Mysql服务</p>\n<p>通过yum安装命令进行安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-8.noarch.rpm\nyum localinstall mysql57-community-release-el7-8.noarch.rpm\nyum install mysql-community-server</code></pre>\n<p>3.Mysql配置</p>\n<ul>\n<li><p>  启动mysqld服务（第一次启动会初始化配置，之后再启动就不用了）：<code>systemctl start mysqld</code></p>\n</li>\n<li><p>  将mysqld服务设置为开机启动：<code>systemctl enable mysqld</code>和<code>systemctl daemon-reload</code></p>\n</li>\n<li><p>  安装完毕后，在 /var/log/mysqld.log 文件中会自动生成一个随机的密码，我们需要先取得这个随机密码，以用于登录 MySQL 服务端：<code>grep &quot;password&quot; /var/log/mysqld.log</code>，登录进出之后更改密码即可。</p>\n</li>\n</ul>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.png\" alt=\"image\"></p>\n<p>出现这样的错误就是密码设置的太简单了，需要大小写字母、数字、其他特殊字符组合.</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.png\" alt=\"image\"></p>\n<ul>\n<li>  密码设置出问题可以使用下列指令：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">set global validate_password_policy&#x3D;0; # 设置密码强度为low\nset global validate_password_length&#x3D;4; # 设置密码最低长度为4\nalter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;123456&#39;; # 设置root密码为123456  \\q 退出</code></pre>\n此时我们就可以使用以下命令再输入密码，登录mysql数据库了：<code>mysql -u root -p</code></li>\n</ul>\n<p><strong>特别需要注意的是mysql数据库的数据库文件存放在/var/lib/mysql，端口为3306</strong></p>\n<p>4.远程连接Mysql数据库</p>\n<p>安装完Mysql之后，远程连接数据库之前需要开启Mysql的远程连接权限，执行下面两条语句即可：  1）给予任何主机访问数据的权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">MySQL&gt;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;mypassword&#39; WITH GRANT OPTION</code></pre>\n<p>2）修改生效</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">MySQL&gt;FLUSH PRIVILEGES</code></pre>\n<p>3）退出MySQL服务器</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">MySQL&gt;EXIT</code></pre>\n<h4 id=\"第四步：安装PHP\"><a href=\"#第四步：安装PHP\" class=\"headerlink\" title=\"第四步：安装PHP\"></a>第四步：安装PHP</h4><hr>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><p>1.下载安装包php-7.1.26.tar.gz并用xftp上传至服务器/usr/local/路径中：<br>      下载链接：<a href=\"https://www.php.net/\">https://www.php.net/</a><br>2.安装一些依赖库文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install libxml2-devel gd-devel libmcrypt-devel libcurl-devel openssl-devel</code></pre>\n<p>3.解压并编译安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;usr&#x2F;local&#x2F;\n#解压\ntar -zxvf php-7.1.26.tar.gz\n#进入相应文件中\ncd &#x2F;usr&#x2F;local&#x2F;php-7.1.26\n#1.预编译，（注意这里非常关键），首先我们php的安装路径为&#x2F;usr&#x2F;local&#x2F;php7，同样需要先创建#php7这个文件夹，同时，为了得到接下来关联Apache需要使用的libphp7.so 需要添加\n#--with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs这一段，这样我们才能生成需要的libphp7.so\n#2.--enable-fpm也是必须的，该依赖可以使php可以关联Apache或者Nginx一同工作\n.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php7 \\\n --with-curl \\\n --with-freetype-dir \\\n --with-gd \\\n --with-gettext \\\n --with-iconv-dir \\\n --with-kerberos \\\n --with-libdir&#x3D;lib64 \\\n --with-libxml-dir \\\n --with-mysqli \\\n --with-openssl \\\n --with-pcre-regex \\\n --with-pdo-mysql \\\n --with-pdo-sqlite \\\n --with-pear \\\n --with-png-dir \\\n --with-xmlrpc \\\n --with-xsl \\\n --with-zlib \\\n --with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs \\\n --enable-fpm \\\n --enable-bcmath \\\n --enable-libxml \\\n --enable-inline-optimization \\\n --enable-gd-native-ttf \\\n --enable-mbregex \\\n --enable-mbstring \\\n --enable-opcache \\\n --enable-pcntl \\\n --enable-shmop \\\n --enable-soap \\\n --enable-sockets \\\n --enable-sysvsem \\\n --enable-xml \\\n --enable-zip \\\n --enable-mysqlnd\n\n#编译安装\nmake \nmake install\n​\n#查看&#x2F;usr&#x2F;loca&#x2F;apache2&#x2F;modules中是否包含libphp7.so文件\ncd &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;modules&#x2F;\nll\n#若存在，则可以进行下一步，失败的话需要重新排下错误，看是否操作有误。\n#出问题可参考该文章 https:&#x2F;&#x2F;www.zhihu.com&#x2F;question&#x2F;38869703</code></pre>\n<p>4.复制php初始化文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#cd到&#x2F;usr&#x2F;local&#x2F;php-7.1.26\ncd &#x2F;usr&#x2F;local&#x2F;php-7.1.26\n#执行如下命令\ncp php.ini-development &#x2F;usr&#x2F;local&#x2F;php7&#x2F;lib&#x2F;php.ini</code></pre>\n<p>5.配置php-fpm</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#php-fpm是支持Apache和Nginx的必要依赖，当修改php.ini后需要重启php-fpm才能生效\ncd &#x2F;usr&#x2F;local&#x2F;php7&#x2F;etc&#x2F;\ncp php-fpm.conf.default php-fpm.conf\n​\ncd &#x2F;usr&#x2F;loca&#x2F;php7&#x2F;etc&#x2F;php-fpm.d\ncp www.conf.default www.conf</code></pre>\n<p>6.php-fpm的启动与关闭</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#首次启动php-fpm\ncd &#x2F;usr&#x2F;local&#x2F;php7&#x2F;sbin&#x2F;\n.&#x2F;php-fpm\n​\n#若已启动过php-fpm则需要用重启的这种方法\n#查看php-fpm的master进程号，如下图所示，master进程号为4384\nps -ef | grep php-fpm\n#使用USR2信号平滑重启所有worker进程并重新载入配置和二进制模块\nkill -USR2 4384\n​\n#php-fpm的关闭，同样是查看进程号,再执行以下命令\nkill -INT 4384</code></pre>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/4.png\" alt=\"image\"></p>\n<p>7.测试PHP是否安装成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#任意文件夹下创建test.php文件，\ntouch test.php\n#编辑如下内容\n&lt;?php\n phpinfo();\n?&gt;\n#测试,以php的命令执行test.php文件\n&#x2F;usr&#x2F;local&#x2F;php7&#x2F;bin&#x2F;php test.php\n#若有内容输出，则证明已经安装成功了</code></pre>\n<h5 id=\"关联Apache-关键步骤\"><a href=\"#关联Apache-关键步骤\" class=\"headerlink\" title=\"关联Apache(关键步骤)\"></a>关联Apache(关键步骤)</h5><p>1.查看Apache的配置文件是否已经开启关联(一般情况下，安装完成PHP后，会开启，假如没有开启则开启)，可通过第步的测试来测试是否已经开启关联。</p>\n<p>2.开启关联</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#编辑Apache配置文件\nvim &#x2F;usr&#x2F;local&#x2F;apache&#x2F;conf&#x2F;httpd.conf\n​\n#在配置文件中的LoadModule模块中加入如下语句，开启关联\nLoadModule php7_module &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;modules&#x2F;libphp7.so\n​\n#在配置文件末尾加入如下代码\n&lt;FilesMatch \\.php$&gt;\nSetHandler application&#x2F;x-httpd-php\n&lt;&#x2F;FilesMatch&gt;\n​\n#搜索DirectoryIndex，初始只有index.html 更改为如下代码\nDirectoryIndex index.html index.shtml index.cgi index.php index.phtml index.php3\n​\n#找到AddType出，添加如下两行代码\nAddType application&#x2F;x-httpd-php .php .php3 .phtml .inc\nAddType application&#x2F;x-httpd-php-source .phps</code></pre>\n<p>3.测试</p>\n<p>配置文件中的DocumentRoot如下，因此，在/usr/local/apache2/htdocs下创建info.php来测试：（注：该路径即为以后放置我们网站的路径）</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/5.png\" alt=\"image\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#到如下路径中\ncd &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;htdocs\n#创建info.php\nvim info.php\n#输入如下内容\n&lt;?php\n phpinfo();\n?&gt;\n#保存并退出编辑。</code></pre>\n<p>在浏览器中输入虚拟机访问地址加info.php：ip/info.php</p>\n<p>若出现如下图所示，则关联成功了</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/6.png\" alt=\"image\"></p>\n<h5 id=\"关联Mysql-关键步骤\"><a href=\"#关联Mysql-关键步骤\" class=\"headerlink\" title=\"关联Mysql(关键步骤)\"></a>关联Mysql(关键步骤)</h5><p>在php编译的时候，我们加了如下的参数才可以实现关联Mysql(此处目的只是列出来与mysql有关联的扩展，上面编译时已包含进来了)：因为php7.0以上的版本废弃了mysql扩展，所以我们使用mysqli和pdo_mysql来实现关联Mysql。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">--with-mysqli \\\n--with-pdo-mysql \\\n--enable-mysqlnd</code></pre>\n<p>其实，在编译的时候我们就已经添加了关联Mysql的依赖了(最好在之前就弄了，不然会挺麻烦的)。若忘记在编译的时候加上上诉依赖模块，可以使用如下方法来添加扩展，此处以添加mysqli扩展为例。</p>\n<p>php配置文件中默认扩展的存放位置为***/usr/local/php7/lib/php/extensions/no-debug-zts-20160303***</p>\n<p>1.在解压出来的php-7.1.26中查找是否包含mysqli这扩展文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;usr&#x2F;local&#x2F;php-7.1.26&#x2F;ext&#x2F;\n#使用ls查看文件夹内容\nls\n#若无，则需要在网上下载相应的扩展压缩包，之后再进入解压出来的文件夹内执行以下步骤的操作(不包括cd #mysqli)若有mysqli，则可以直接在该文件夹下编译安装该扩展，步骤如下\ncd mysqli\n#使用phpize初始化，若在初始化时出错，报错信息为Cannot find autoconf。。。。。则可以使用\n#yum install autoconf来解决\n&#x2F;usr&#x2F;local&#x2F;php7&#x2F;bin&#x2F;phpize\n#编译\n.&#x2F;configure \n#安装\nmake &amp;&amp; make install\n#安装完成会在默认扩展存放路径中生成mysqli.so文件</code></pre>\n<p>2.编辑php.ini</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#cd到相应路径下\ncd &#x2F;usr&#x2F;local&#x2F;php7&#x2F;lib\n#开启编辑\nvim php.ini\n#引入扩展\nextension&#x3D;mysqli.so\n#重启php，步骤如之前重启php-fpm所示一致</code></pre>\n<p>3.在之前测试访问的info.php中，若出现如下两个图中的mysqli和pdo_mysql扩展，则说明关联mysql成功了</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/7.png\" alt=\"image\"></p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/8.png\" alt=\"image\"> </p>\n<h4 id=\"第五步：-测试用例-LINUX下的ECShop部署\"><a href=\"#第五步：-测试用例-LINUX下的ECShop部署\" class=\"headerlink\" title=\"第五步：(测试用例)LINUX下的ECShop部署\"></a>第五步：(测试用例)LINUX下的ECShop部署</h4><p>1.将ECShop的源代码appserver和ecshop放到我们安装的Apache的htdocs文件夹中，</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#htdocs的路径如下\ncd &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;htdocs&#x2F;\n#给两个文件夹赋予读、写和可执行的权限\nchmod -R 777 appserver\nchmod -R 777 ecshop</code></pre>\n<p>2.在浏览器中输入ip/ecshop就可以看到安装向导页面啦（1图）！(之前安装的时候都踩了好多坑，2图所示，原因就是文件夹的权限没有给，给这两个文件夹可读可写的权限后就可以正常安装ecshop啦)</p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/9.png\" alt=\"image\"></p>\n<p><img src=\"../img/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/10.png\" alt=\"image\"></p>\n<p>同时，还遇到的一个坑是数据库连接不上，原因是我使用的是阿里云服务器，而localhost不知道为什么解析不了，输入服务器的具体ip地址就可以成功连接了。</p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p>PHP7安装：<a href=\"https://www.jianshu.com/p/4438ff8aa44a\">https://www.jianshu.com/p/4438ff8aa44a</a></p>\n<p>Linux下的EC_Shop部署：<a href=\"https://blog.csdn.net/iteye_14593/article/details/82675082\">https://blog.csdn.net/iteye_14593/article/details/82675082</a></p>\n","text":"前言Centos7下LAMP的环境搭建！后续会带来集成LNMP的环境搭建！版本：Apache(httpd-2.4.38)+MySQL-5.7.24+PHP-7.1.26 第一步：配置防火墙 1.开放80和3306端口：firewall-cmd –zone=public –add-...","link":"","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"LAMP","slug":"LAMP","count":1,"path":"api/tags/LAMP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E9%85%8D%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99\"><span class=\"toc-text\">第一步：配置防火墙</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85Apache\"><span class=\"toc-text\">第二步：使用源码安装Apache</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Apache%E4%B9%8B%E5%89%8D%E5%85%B3%E8%81%94%E4%BE%9D%E8%B5%96%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装Apache之前关联依赖的安装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Apache\"><span class=\"toc-text\">安装Apache</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A%E5%AE%89%E8%A3%85MySQL\"><span class=\"toc-text\">第三步：安装MySQL</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E6%AD%A5%EF%BC%9A%E5%AE%89%E8%A3%85PHP\"><span class=\"toc-text\">第四步：安装PHP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94Apache-%E5%85%B3%E9%94%AE%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">关联Apache(关键步骤)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94Mysql-%E5%85%B3%E9%94%AE%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">关联Mysql(关键步骤)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E6%AD%A5%EF%BC%9A-%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B-LINUX%E4%B8%8B%E7%9A%84ECShop%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">第五步：(测试用例)LINUX下的ECShop部署</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}},"mapped":true,"prev_post":{"title":"SSM整合redis","uid":"c36c9697172955c6c9f9103f2df4da81","slug":"SSM整合redis","date":"2019-04-16T06:52:59.000Z","updated":"2021-07-01T08:05:04.356Z","comments":true,"path":"api/articles/SSM整合redis.json","keywords":null,"cover":"../img/SSM整合redis/cover.jpeg","text":"1.新建redis.properties在classpath下创建redis.properties，内容如下： redis.host&#x3D;连接的redis服务器ip地址 redis.port&#x3D;6379 &#x2F;&#x2F;端口号 redis.password&...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"Java","slug":"Java","count":8,"path":"api/categories/Java.json"}],"tags":[{"name":"SSM","slug":"SSM","count":1,"path":"api/tags/SSM.json"},{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"}],"author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}}},"next_post":{"title":"Springboot整合redis","uid":"09e2399cbd512aa4be49b295beddf488","slug":"Springboot整合redis","date":"2019-03-21T06:52:34.000Z","updated":"2021-07-01T07:47:58.856Z","comments":true,"path":"api/articles/Springboot整合redis.json","keywords":null,"cover":"../img/Springboot整合redis/cover.jpeg","text":"####一、redis服务器安装与配置1.redis安装 #下载相应相应的tar.gz包 wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-5.0.3.tar.gz #解压 tar -zxvf red...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Java","slug":"Java","count":8,"path":"api/categories/Java.json"}],"tags":[{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"},{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"}],"author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}}}}