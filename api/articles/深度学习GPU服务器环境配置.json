{"title":"深度学习GPU服务器环境配置","uid":"689325bb08ea34f3ae386de22ecde592","slug":"深度学习GPU服务器环境配置","date":"2019-07-12T03:27:54.000Z","updated":"2021-07-08T11:44:18.562Z","comments":true,"path":"api/articles/深度学习GPU服务器环境配置.json","keywords":null,"cover":"../img/GPU环境配置/cover.jpeg","content":"<p>这几天在跑深度学习有关的代码，弄了一个GPU，找了很多博客去了解如何使用配置才可以使我的代码可以使用GPU去跑。在这一天的忙碌中，终于在晚上把这事搞定了。或许大家会疑惑一个”简单”配置为什么要搞这么久，-_-|| 因为大多资料都是关于Ubuntu系统的配置，关于Centos的资料挺少的，为此，特地记录下本次的配置过程与踩过的坑，留给大家参考。话不多说，开始本教程吧！</p>\n<h4 id=\"1-系统环境与软件版本\"><a href=\"#1-系统环境与软件版本\" class=\"headerlink\" title=\"1.系统环境与软件版本\"></a>1.系统环境与软件版本</h4><p><strong>系统版本</strong>：<code>cento7.5</code><br><strong>内核版本</strong>：<code>3.10.0-862.el7.x86_64</code><br><strong>软件版本</strong>：<code>cuda9.0与cudnn7.0</code><br><strong>显卡驱动</strong>：<code>Nvidia-384.183</code><br><strong>cuda9.0具体包名</strong>：<code>cuda-repo-rhel7-9-0-local-9.0.176-1.x86_64.rpm</code><br><strong>cudnn7.0具体包名</strong>：<code>cudnn-9.0-linux-x64-v7.tgz</code></p>\n<p>要注意版本的对应性，此处cuda9.0，所以cudnn选择的是<code>cudnn7.0 for cuda9.0</code>即<code>cudnn-9.0-linux-x64-v7.tgz</code>。</p>\n<h4 id=\"2-相应软件包查询与获取\"><a href=\"#2-相应软件包查询与获取\" class=\"headerlink\" title=\"2.相应软件包查询与获取\"></a>2.相应软件包查询与获取</h4><h5 id=\"2-1-查看当前系统版本：\"><a href=\"#2-1-查看当前系统版本：\" class=\"headerlink\" title=\"2.1 查看当前系统版本：\"></a>2.1 查看当前系统版本：</h5><p>系统中输入指令<code>cat /etc/redhat-release</code>，结果图示例：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1.png\" alt=\"image.png\"></p>\n<h5 id=\"2-2-查看内核版本\"><a href=\"#2-2-查看内核版本\" class=\"headerlink\" title=\"2.2 查看内核版本\"></a>2.2 查看内核版本</h5><p>输入指令<code>uname -r</code>，结果图示例：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2.png\" alt=\"image.png\"></p>\n<p>可以看到我们系统当前的内核版本，如我的为<code>3.10.0-862.el7.x86_64</code></p>\n<h5 id=\"2-3-检测是否含有GPU\"><a href=\"#2-3-检测是否含有GPU\" class=\"headerlink\" title=\"2.3 检测是否含有GPU\"></a>2.3 检测是否含有GPU</h5><p>输入指令<code>lspci | grep -i nvidia</code>，结果示例图：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/3.png\" alt=\"image.png\"><br>可以看到我们系统是否含有GPU，其中图中的Tesla P40是我的GPU对应的版本；</p>\n<h5 id=\"2-4-获取对应版本的显卡驱动\"><a href=\"#2-4-获取对应版本的显卡驱动\" class=\"headerlink\" title=\"2.4 获取对应版本的显卡驱动\"></a>2.4 获取对应版本的显卡驱动</h5><p>在知道我们的GPU型号后可以去以下网址拿到对获取对应的显卡驱动：<a href=\"https://www.nvidia.com/Download/index.aspx?lang=en-us\">点此查询</a><br>界面如下图所示：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/4.png\" alt=\"image.png\"></p>\n<p>图中主要是选择我们的GPU类型，比如我的是<code>Tesla</code>的，P系列的<code>Tesla P40</code>的GPU，上图忘记选择<code>cuda9.0</code>了，大家注意选择哈！因为tensorflow是基于cuda9.0的，貌似不支持cuda10(参考他人博客的，有误望指出)</p>\n<p>点击右下方的<code>SEARCH</code>，跳转到如下页面后，点击DOWNLOAD下载即可。</p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/5.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/6.png\" alt=\"image.png\"></p>\n<p>使用xftp将显卡驱动上传到我们的服务器中。<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/7.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8.png\" alt=\"image.png\"></p>\n<h5 id=\"2-5-获取cuda9-0\"><a href=\"#2-5-获取cuda9-0\" class=\"headerlink\" title=\"2.5  获取cuda9.0\"></a>2.5  获取cuda9.0</h5><p><strong>下载地址</strong>：<a href=\"https://developer.nvidia.com/cuda-90-download-archive\">点此下载</a><br>按自己系统版本进行选择，选择示例如下图：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/9.png\" alt=\"image.png\"></p>\n<p>下载完后同样用xftp上传到我们的服务器中。</p>\n<h5 id=\"2-6-获取cudnn7-0\"><a href=\"#2-6-获取cudnn7-0\" class=\"headerlink\" title=\"2.6 获取cudnn7.0\"></a>2.6 获取cudnn7.0</h5><p><strong>第一种方法</strong>：使用压缩包安装</p>\n<p>在服务器中输入如下指令，下载对应的压缩包(即cuda9.0对应的cudnn7.0)<br><code>wget http://developer.download.nvidia.com/compute/redist/cudnn/v7.0.5/cudnn-9.0-linux-x64-v7.tgz </code><br>下载结果示例图：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/10.png\" alt=\" image.png\"></p>\n<p>更多类型的cudnn系列下载地址参考此处：<a href=\"https://blog.csdn.net/xiangxianghehe/article/details/79177833\">点此查看</a></p>\n<p><strong>第二种方法</strong>：<br><strong>注意：此处我亲测的是第一种方法的安装法师，第二种方法的话需要大家尝试哈！</strong>此处写出来是为了提供该官网下载地址。去NVIDIA官网下载cuda7.0，需要注册账号登录后才可下载：<a href=\"https://developer.nvidia.com/rdp/cudnn-download\">点此下载</a></p>\n<h4 id=\"3-开始安装\"><a href=\"#3-开始安装\" class=\"headerlink\" title=\"3. 开始安装\"></a>3. 开始安装</h4><h5 id=\"3-1-安装前准备工作\"><a href=\"#3-1-安装前准备工作\" class=\"headerlink\" title=\"3.1 安装前准备工作\"></a>3.1 安装前准备工作</h5><p><strong>yum安装epel、aliyun、elrepo源</strong></p>\n<ul>\n<li><code>yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></li>\n<li><code>yum -y install epel-release</code></li>\n<li><code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>\n<li><code>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</code></li>\n<li><code>rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</code></li>\n</ul>\n<p><strong>安装gcc、gcc-c++编译器</strong><br>若已存在则不需要安装<br><code>yum –y install gcc</code><br><code>yum -y install gcc-c++</code></p>\n<p><strong>禁用系统自带的nouveau驱动</strong><br>1）编辑文件<code>vi /etc/default/grub</code> 在其中添加<code>rd.driver.blacklist=nouveau nouveau.modeset=0</code>到<code>GRUB_CMDLINE_LINUX</code>后面，如下图：</p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/11.png\" alt=\"image.png\"><br>2）输入以下指令生成新的grub配置<br><code>grub2-mkconfig -o /boot/grub2/grub.cfg </code><br>3）编辑/etc/modprobe.d/blacklist.conf(如果不存在则创建)，并添加<code>blacklist nouveau</code><br><code>vi /etc/modprobe.d/blacklist.conf </code><br>示例图：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/12.png\" alt=\"image.png\"></p>\n<p><strong>检查内核版本是否一致</strong><br>这一步如果不做好的话(即内核版本不一致)，在安装显卡驱动时就会遇到下图类似的错误：</p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/13.png\" alt=\"image\"></p>\n<p>为此，我们需要检查一下当前运行内核版本与<code>/usr/src/kernels</code>目录下的kernel源码版本是否一致。</p>\n<ul>\n<li>检查当前运行内核版本<code>uname -r</code>，结果示例如下图：</li>\n</ul>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/14.png\" alt=\"image.png\"></p>\n<ul>\n<li>检查<code>/usr/src/kernels</code>目录下的kernel源码版本<br><code>cd /usr/src/kernels</code><br><code>ls</code><br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/15.png\" alt=\"image.png\"></li>\n</ul>\n<p>可以看到有对应的版本<code>3.10.0-862.el7.x86_64</code>。其实我之前就踩了这个坑，该文件夹下并没有<code>3.10.0-862.el7.x86_64</code>，只有<code>3.10.0-957.21.3.el7.x86_64</code>版本的源码，导致我装显卡驱动一致失败。</p>\n<p><strong>若版本一致</strong>，则可以继续进行下一步了(忽略下面版本不一致时候的操作)。</p>\n<p><strong>若无对应版本的内核源码</strong>，可以在此处下载：<a href=\"http://ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/\">点此下载</a></p>\n<p>找到与自己系统运行源码版本一致的包，如我的查找的包为：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/16.png\" alt=\"image.png\"></p>\n<p>使用xftp将该包传到服务器中，并cd到存储该包的文件夹中，执行以下指令：<br><code>yum -y install kernel-3.10.0-862.14.4.el7.x86_64.rpm</code></p>\n<p><code>cd /usr/src/kernels</code>并查看文件夹是否安装成功。</p>\n<p><strong>重启使刚才的禁用配置生效</strong><br><code>reboot</code></p>\n<h5 id=\"3-2-安装cuda9-0\"><a href=\"#3-2-安装cuda9-0\" class=\"headerlink\" title=\"3.2 安装cuda9.0\"></a>3.2 安装cuda9.0</h5><p>cd到我们存放<code>cuda-repo-rhel7-9-0-local-9.0.176-1.x86_64.rpm</code>的文件夹中，执行安装命令：<br><code>rpm -i  cuda-repo-rhel7-9-0-local-9.0.176-1.x86_64.rpm</code><br><code>yum clean all</code><br><code>yum -y install cuda</code></p>\n<p>cuda的默认安装路径如下：<code>/usr/local/cuda</code><br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/17.png\" alt=\"image.png\"></p>\n<p><strong>设置cuda环境变量</strong><br><code>vi /etc/profile</code><br>添加以下内容到末尾：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">export CUDA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda\nexport LD_LIBRARY_PATH&#x3D;$CUDA_HOME&#x2F;lib64:$CUDA_HOME&#x2F;extras&#x2F;CUPTI&#x2F;lib64:$LD_LIBRAY_PATH\nexport PATH&#x3D;$CUDA_HOME&#x2F;bin:$PATH\n</code></pre>\n<p>使配置文件生效：<code>source /etc/profile</code></p>\n<h5 id=\"3-3-安装cudnn7-0\"><a href=\"#3-3-安装cudnn7-0\" class=\"headerlink\" title=\"3.3 安装cudnn7.0\"></a>3.3 安装cudnn7.0</h5><p>cd到我们的压缩包存放文件夹中，解压<br><code>tar -zxvf  cudnn-9.0-linux-x64-v7.tgz</code><br>结果如图所示：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/18.png\" alt=\"image.png\"></p>\n<p>将cuda中的文件复制到cuda toolkit目录中，然后更改文件权限：<br><code>sudo cp cuda/include/cudnn.h /usr/local/cuda/include</code><br><code>sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64</code><br><code>sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*</code></p>\n<p>至此cuda与cudnn安装完成。</p>\n<h4 id=\"3-4-安装tensorflow-gpu\"><a href=\"#3-4-安装tensorflow-gpu\" class=\"headerlink\" title=\"3.4 安装tensorflow-gpu\"></a>3.4 安装tensorflow-gpu</h4><p><code>yum -y install python-pip</code><br><code>pip install --upgrade pip</code><br><code>pip install tensorflow-gpu==1.10.1</code> </p>\n<p>之所以安装1.10.1是因为之前安装1.11.1时，导入tensorflow包使用时会产生段错误：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/19.png\" alt=\"image.png\"></p>\n<p>起初以为是cudnn版本问题，但实际是tensorflow-gpu版本过高了，降低为1.10.1就好了。</p>\n<h5 id=\"3-5-验证cuda和cudnn安装无误\"><a href=\"#3-5-验证cuda和cudnn安装无误\" class=\"headerlink\" title=\"3.5 验证cuda和cudnn安装无误\"></a>3.5 验证cuda和cudnn安装无误</h5><p>进入到python shell，输入以下代码<br><code>import tensorflow</code><br>按回车，若无报错说明cuda与cudnn已经安装好了。</p>\n<h5 id=\"3-6-安装NVIDIA显卡驱动\"><a href=\"#3-6-安装NVIDIA显卡驱动\" class=\"headerlink\" title=\"3.6 安装NVIDIA显卡驱动\"></a>3.6 安装NVIDIA显卡驱动</h5><p>重做inittramfs镜像：<br><code>cp /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak</code><br><code>dracut /boot/initramfs-$(uname -r).img $(uname -r)</code></p>\n<p>cd到驱动所在目录：<br><code>chmod +x NVIDIA-Linux-x86_64-384.183.run</code><br><code>./NVIDIA-Linux-x86_64-384.183.run --kernel-source-path=/usr/src/kernels/3.10.0-862.el7.x86_64/</code></p>\n<p>执行后就开始安装驱动了，<br>接受许可：<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/20.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/21.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/22.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/23.png\" alt=\"image.png\"></p>\n<p><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/24.png\" alt=\"image.png\"></p>\n<p>检查驱动安装情况<code>nvidia-smi</code>，出现如下页面说明已经成功了。<br><img src=\"../img/GPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/25.png\" alt=\"image.png\"></p>\n<p>至此，全部安装已经完成了！可以happy的使用GPU了！</p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p>显卡驱动安装：<a href=\"https://blog.csdn.net/xueshengke/article/details/78134991\">https://blog.csdn.net/xueshengke/article/details/78134991</a></p>\n<p>cudnn压缩包：<a href=\"https://blog.csdn.net/xiangxianghehe/article/details/79177833\">https://blog.csdn.net/xiangxianghehe/article/details/79177833</a></p>\n<p>导入tensorflow报错解决：<a href=\"https://blog.csdn.net/u014561933/article/details/80201552\">https://blog.csdn.net/u014561933/article/details/80201552</a></p>\n<p>官方安装文档：<a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#install-linux\">https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#install-linux</a></p>\n<p><a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#install-linux\">https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#install-linux</a></p>\n<p><a href=\"https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html\">https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html</a></p>\n<p>cudnn报错解决：<a href=\"https://blog.csdn.net/jy1023408440/article/details/82887479\">https://blog.csdn.net/jy1023408440/article/details/82887479</a></p>\n<p>环境服务搭建：<a href=\"https://www.jianshu.com/p/bc9c054d1767\">https://www.jianshu.com/p/bc9c054d1767</a></p>\n","feature":true,"text":"这几天在跑深度学习有关的代码，弄了一个GPU，找了很多博客去了解如何使用配置才可以使我的代码可以使用GPU去跑。在这一天的忙碌中，终于在晚上把这事搞定了。或许大家会疑惑一个”简单”配置为什么要搞这么久，-_-|| 因为大多资料都是关于Ubuntu系统的配置，关于Centos的资料...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"深度学习","slug":"深度学习","count":2,"path":"api/categories/深度学习.json"}],"tags":[{"name":"环境配置","slug":"环境配置","count":2,"path":"api/tags/环境配置.json"},{"name":"GPU服务器","slug":"GPU服务器","count":1,"path":"api/tags/GPU服务器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8E%E8%BD%AF%E4%BB%B6%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">1.系统环境与软件版本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E7%9B%B8%E5%BA%94%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%9F%A5%E8%AF%A2%E4%B8%8E%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">2.相应软件包查询与获取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC%EF%BC%9A\"><span class=\"toc-text\">2.1 查看当前系统版本：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-%E6%9F%A5%E7%9C%8B%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">2.2 查看内核版本</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89GPU\"><span class=\"toc-text\">2.3 检测是否含有GPU</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-4-%E8%8E%B7%E5%8F%96%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E7%9A%84%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8\"><span class=\"toc-text\">2.4 获取对应版本的显卡驱动</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-5-%E8%8E%B7%E5%8F%96cuda9-0\"><span class=\"toc-text\">2.5  获取cuda9.0</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-6-%E8%8E%B7%E5%8F%96cudnn7-0\"><span class=\"toc-text\">2.6 获取cudnn7.0</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3. 开始安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-1-%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">3.1 安装前准备工作</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-%E5%AE%89%E8%A3%85cuda9-0\"><span class=\"toc-text\">3.2 安装cuda9.0</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-%E5%AE%89%E8%A3%85cudnn7-0\"><span class=\"toc-text\">3.3 安装cudnn7.0</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-4-%E5%AE%89%E8%A3%85tensorflow-gpu\"><span class=\"toc-text\">3.4 安装tensorflow-gpu</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-5-%E9%AA%8C%E8%AF%81cuda%E5%92%8Ccudnn%E5%AE%89%E8%A3%85%E6%97%A0%E8%AF%AF\"><span class=\"toc-text\">3.5 验证cuda和cudnn安装无误</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-6-%E5%AE%89%E8%A3%85NVIDIA%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8\"><span class=\"toc-text\">3.6 安装NVIDIA显卡驱动</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}},"mapped":true,"prev_post":{"title":"Centos7中的Anaconda安装并开启远程访问jupyter","uid":"72eedad54c92985af6f56cde2713a88f","slug":"Centos7中的Anaconda安装并开启远程访问jupyter","date":"2019-07-14T11:51:32.000Z","updated":"2021-07-28T11:58:49.048Z","comments":true,"path":"api/articles/Centos7中的Anaconda安装并开启远程访问jupyter.json","keywords":null,"cover":"../img/远程访问jupyter/cover.jpeg","text":"由于最近在做深度学习相关的学习，需要使用GPU跑代码，但是发现每次需要跑代码的时候都要把代码考上去，而且不怎么方便调试，为此使用Anaconda的jupyter来写代码，可以通过远程服务器上的jupyter来实现本地实时调代码，为此特意查找了相关的远程jupyter资料，特此整理...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"深度学习","slug":"深度学习","count":2,"path":"api/categories/深度学习.json"}],"tags":[{"name":"环境配置","slug":"环境配置","count":2,"path":"api/tags/环境配置.json"}],"author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}},"feature":true},"next_post":{"title":"slf4j+log4j2配置日志管理系统","uid":"4f52276e8a611fec0c598c202290c486","slug":"slf4j-log4j2配置日志管理系统","date":"2019-07-05T03:27:06.000Z","updated":"2021-07-08T11:34:44.171Z","comments":true,"path":"api/articles/slf4j-log4j2配置日志管理系统.json","keywords":null,"cover":"../img/日志管理系统/cover.jpeg","text":"日志解决方案这么多，为何我们选择slf4j+log4j2来作为日志系统呢？首先我们来将常见的日志作对比。 1 日志解决方案对比1.1 log4jLog4j是Apache的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、数据库等；我们也可以控...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"slf4j","slug":"slf4j","count":1,"path":"api/tags/slf4j.json"},{"name":"log4j2","slug":"log4j2","count":1,"path":"api/tags/log4j2.json"}],"author":{"name":"安安哎呀呀","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"山内有樱名为良，树本无名只待春","socials":{"github":"https://github.com/JeryLiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/243662531"},"jianshu":{"icon":"/svg/jianshu.svg","link":"https://www.jianshu.com/u/f1275d68d75d"}}}}}}